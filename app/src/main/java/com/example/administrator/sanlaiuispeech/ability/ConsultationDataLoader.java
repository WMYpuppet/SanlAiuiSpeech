package com.example.administrator.sanlaiuispeech.ability;import android.content.Context;import android.content.res.AssetManager;import android.os.AsyncTask;import android.text.TextUtils;import android.util.Log;import com.example.administrator.sanlaiuispeech.SpeechApp;import com.example.administrator.sanlaiuispeech.data.AIUIQaDao;import com.example.administrator.sanlaiuispeech.data.AIUIQaDto;import com.iflytek.mobileXCorebusiness.base.utils.LogUtil;import java.util.ArrayList;import java.util.List;import jxl.Sheet;import jxl.Workbook;public class ConsultationDataLoader {    public interface onEventListener {        void onFinish();        void onError(String error);    }    public onEventListener mOnEventListener;    private Context mContext;    /**     * 咨询数据文件xls地址     */    private static final String CONSULTATION_DATA_XLS = "slrobot_qa.xls";    /**     * 咨询项数量（表数量）     */    private static final int CONSULTATION_COUNT = 14;    /**     * 构造     *     * @param context     */    public ConsultationDataLoader(Context context) {        mContext = context;    }    public void loadConsultationData(onEventListener listener) {        mOnEventListener = listener;        new ExcelDataLoader().execute(CONSULTATION_DATA_XLS);    }    /**     * 获取 excel 表格中的数据,不能在主线程中调用     *     * @param xlsName excel 表格的名称     * @param index   第几张表格中的数据     * @return     */    private ArrayList<String[]> getXlsData(String xlsName, int index) {        ArrayList<String[]> dataList = new ArrayList<String[]>();        AssetManager assetManager = mContext.getAssets();        try {            Workbook workbook = Workbook.getWorkbook(assetManager.open(xlsName));            Sheet sheet = workbook.getSheet(index);            int sheetNum = workbook.getNumberOfSheets();            int sheetRows = sheet.getRows();            int sheetColumns = sheet.getColumns();            for (int i = 0; i < sheetRows; i++) {                String[] dataItem = {                        sheet.getCell(2, i).getContents(),                        sheet.getCell(7, i).getContents()                };                dataList.add(dataItem);            }            workbook.close();        } catch (Exception e) {            Log.d("forest","exce:"+e.getMessage());            mOnEventListener.onError("read consultation xls error!");            e.printStackTrace();        }        return dataList;    }    /**     * 解析xls数据，异步处理     */    private class ExcelDataLoader extends AsyncTask<String, Void, List<AIUIQaDto>> {        @Override        protected void onPreExecute() {        }        @Override        protected List<AIUIQaDto> doInBackground(String... params) {            List<AIUIQaDto> data_all = new ArrayList();            try {                for (int i = 0; i < 1; i++) {                    //获取XLS数据                    ArrayList<String[]> consultation_data = getXlsData(params[0], i);                    for (String[] item : consultation_data) {                        AIUIQaDto itemBean = new AIUIQaDto();                        if (!TextUtils.isEmpty(item[1])) {                            itemBean.setAnswer(item[1]);                        }                        if (!TextUtils.isEmpty(item[0])) {                            itemBean.setQues(item[0]);                        }                        data_all.add(itemBean);                    }                }            } catch (Exception ex) {                mOnEventListener.onError("load consultation xls data error!");                ex.printStackTrace();            }            return data_all;        }        @Override        protected void onPostExecute(List<AIUIQaDto> dataList) {            if (dataList != null && dataList.size() > 0) {                AIUIQaDao aiuiQaDao = new AIUIQaDao(SpeechApp.getInstance().getApplicationContext());                aiuiQaDao.deleteAllData();                if (aiuiQaDao.insertSettingList(dataList)) {                    mOnEventListener.onFinish();                }                Log.d("forest", dataList.size() + "lists");            } else {                //加载失败                //LogUtil.getInstance().logError("load xls data failure!");                Log.d("forest", "加载失败");            }        }    }}